{
  "version": 3,
  "sources": ["../../vuetify/src/components/VCarousel/VCarousel.tsx", "../../vuetify/src/components/VCarousel/VCarouselItem.tsx"],
  "sourcesContent": ["// Styles\nimport './VCarousel.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VProgressLinear } from '@/components/VProgressLinear'\nimport { VWindow } from '@/components/VWindow'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { convertToUnit, genericComponent, useRender } from '@/util'\nimport { onMounted, ref, watch } from 'vue'\n\n// Types\nimport type { GroupProvide } from '@/composables/group'\nimport type { PropType } from 'vue'\nimport type { VWindowSlots } from '../VWindow/VWindow'\n\nexport const VCarousel = genericComponent<VWindowSlots>()({\n  name: 'VCarousel',\n\n  props: {\n    color: String,\n    cycle: Boolean,\n    delimiterIcon: {\n      type: IconValue,\n      default: '$delimiter',\n    },\n    height: {\n      type: [Number, String],\n      default: 500,\n    },\n    hideDelimiters: Boolean,\n    hideDelimiterBackground: Boolean,\n    interval: {\n      type: [Number, String],\n      default: 6000,\n      validator: (value: string | number) => value > 0,\n    },\n    modelValue: null,\n    progress: [Boolean, String],\n    showArrows: {\n      type: [Boolean, String],\n      default: true,\n      validator: (v: any) => typeof v === 'boolean' || v === 'hover',\n    },\n    verticalDelimiters: [Boolean, String] as PropType<boolean | 'left' | 'right'>,\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const { t } = useLocale()\n    const windowRef = ref<typeof VWindow>()\n\n    let slideTimeout = -1\n    watch(model, restartTimeout)\n    watch(() => props.interval, restartTimeout)\n    watch(() => props.cycle, val => {\n      if (val) restartTimeout()\n      else window.clearTimeout(slideTimeout)\n    })\n\n    onMounted(startTimeout)\n\n    function startTimeout () {\n      if (!props.cycle || !windowRef.value) return\n\n      slideTimeout = window.setTimeout(windowRef.value.group.next, +props.interval > 0 ? +props.interval : 6000)\n    }\n\n    function restartTimeout () {\n      window.clearTimeout(slideTimeout)\n      window.requestAnimationFrame(startTimeout)\n    }\n\n    useRender(() => (\n      <VWindow\n        ref={ windowRef }\n        v-model={ model.value }\n        class={[\n          'v-carousel',\n          {\n            'v-carousel--hide-delimiter-background': props.hideDelimiterBackground,\n            'v-carousel--vertical-delimiters': props.verticalDelimiters,\n          },\n        ]}\n        style={{ height: convertToUnit(props.height) }}\n        continuous\n        mandatory=\"force\"\n        showArrows={ props.showArrows }\n      >\n        {{\n          default: slots.default,\n          additional: ({ group }: { group: GroupProvide }) => (\n            <>\n              { !props.hideDelimiters && (\n                <div\n                  class=\"v-carousel__controls\"\n                  style={{\n                    left: props.verticalDelimiters === 'left' && props.verticalDelimiters ? 0 : 'auto',\n                    right: props.verticalDelimiters === 'right' ? 0 : 'auto',\n                  }}\n                >\n                  { group.items.value.length > 0 && (\n                    <VDefaultsProvider\n                      defaults={{\n                        VBtn: {\n                          color: props.color,\n                          icon: props.delimiterIcon,\n                          size: 'x-small',\n                          variant: 'text',\n                        },\n                      }}\n                      scoped\n                    >\n                      { group.items.value.map((item, index) => {\n                        const props = {\n                          'aria-label': t('$vuetify.carousel.ariaLabel.delimiter', index + 1, group.items.value.length),\n                          class: [group.isSelected(item.id) && 'v-btn--active'],\n                          onClick: () => group.select(item.id, true),\n                        }\n\n                        return slots.item\n                          ? slots.item({ props, item })\n                          : (<VBtn { ...item } { ...props } />)\n                      })}\n                    </VDefaultsProvider>\n                  )}\n                </div>\n              )}\n\n              { props.progress && (\n                <VProgressLinear\n                  class=\"v-carousel__progress\"\n                  color={ typeof props.progress === 'string' ? props.progress : undefined }\n                  modelValue={ (group.getItemIndex(model.value) + 1) / group.items.value.length * 100 }\n                />\n              )}\n            </>\n          ),\n          prev: slots.prev,\n          next: slots.next,\n        }}\n      </VWindow>\n    ))\n\n    return {}\n  },\n})\n\nexport type VCarousel = InstanceType<typeof VCarousel>\n", "// Components\nimport { VImg } from '@/components/VImg'\nimport { VWindowItem } from '@/components/VWindow'\n\n// Utilities\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { VImgSlots } from '@/components/VImg/VImg'\n\nexport const VCarouselItem = genericComponent<VImgSlots>()({\n  name: 'VCarouselItem',\n\n  inheritAttrs: false,\n\n  props: {\n    value: null,\n  },\n\n  setup (props, { slots, attrs }) {\n    useRender(() => (\n      <VWindowItem class=\"v-carousel-item\" value={ props.value }>\n        <VImg { ...attrs } v-slots={ slots } />\n      </VWindowItem>\n    ))\n  },\n})\n\nexport type VCarouselItem = InstanceType<typeof VCarouselItem>\n"],
  "mappings": "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",
  "names": ["VCarousel", "genericComponent", "name", "props", "color", "String", "cycle", "Boolean", "delimiterIcon", "type", "IconValue", "default", "height", "Number", "hideDelimiters", "hideDelimiterBackground", "interval", "validator", "value", "modelValue", "progress", "showArrows", "v", "verticalDelimiters", "emits", "val", "setup", "slots", "model", "useProxiedModel", "t", "useLocale", "windowRef", "ref", "slideTimeout", "watch", "restartTimeout", "window", "clearTimeout", "onMounted", "startTimeout", "setTimeout", "group", "next", "requestAnimationFrame", "useRender", "convertToUnit", "additional", "left", "right", "items", "length", "VBtn", "icon", "size", "variant", "map", "item", "index", "class", "isSelected", "id", "onClick", "select", "undefined", "getItemIndex", "prev", "VCarouselItem", "genericComponent", "name", "inheritAttrs", "props", "value", "setup", "slots", "attrs", "useRender"]
}
